{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/morganwong/my-projects/tank-m8s/screens/AddTankMate.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, LinearProgress } from 'react-native-elements';\nimport Dropdown from \"../components/Dropdown\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'gray',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    backgroundColor: \"black\",\n    padding: 20,\n    borderRadius: 10,\n    marginTop: \"1rem\"\n  }\n});\n\nvar AddMate1 = function (_Component) {\n  _inherits(AddMate1, _Component);\n\n  var _super = _createSuper(AddMate1);\n\n  function AddMate1(props) {\n    var _this;\n\n    _classCallCheck(this, AddMate1);\n\n    _this = _super.call(this, props);\n\n    _this.setSelectedTank = function (itemValue, itemIndex) {\n      _this.setState({\n        selectedTank: itemValue\n      }, function () {\n        console.log(this.state.selectedTank);\n      });\n\n      if (_this.state.progressVal === 0) {\n        _this.setState({\n          progressVal: _this.state.progressVal + 0.15\n        });\n      }\n    };\n\n    _this.setSelectedType = function (event, index) {\n      _this.setState({\n        selectedType: _this.state.mateTypes[index]\n      }, function () {\n        console.log(_this.state.selectedType);\n      });\n\n      if (_this.state.progressVal < 0.3) {\n        _this.setState({\n          progressVal: _this.state.progressVal + 0.15\n        });\n      }\n    };\n\n    _this.state = {\n      selectedTank: \"hello\",\n      tankOptions: [{\n        id: 1,\n        name: \"Tank 1\"\n      }, {\n        id: 2,\n        name: \"Tank 2\"\n      }, {\n        id: 3,\n        name: \"Tank 3\"\n      }],\n      mateTypes: [\"Plant\", \"Fish\", \"Amphibian\", \"Invertebrate\"],\n      selectedType: \"\",\n      progressVal: 0\n    };\n    return _this;\n  }\n\n  _createClass(AddMate1, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, React.createElement(LinearProgress, {\n        color: \"black\",\n        value: this.state.progressVal,\n        trackColor: \"white\",\n        variant: \"determinate\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }\n      }, \"Step 1:\"), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }\n      }, \"Choose a tank to add to\"), React.createElement(Dropdown, {\n        selectedItem: this.state.selectedTank,\n        setSelectedValue: this.setSelectedTank,\n        itemOptions: this.state.tankOptions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }, \"Step 2:\"), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }, \"Choose the type of mate\"), this.state.mateTypes.map(function (elem, index) {\n        return React.createElement(Button, {\n          onPress: function onPress(event) {\n            return _this2.setSelectedType(event, index);\n          },\n          buttonStyle: styles.button,\n          activeOpacity: .5,\n          title: elem,\n          type: \"solid\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }\n        });\n      })));\n    }\n  }]);\n\n  return AddMate1;\n}(Component);\n\nexport default AddMate1;","map":{"version":3,"sources":["/Users/morganwong/my-projects/tank-m8s/screens/AddTankMate.js"],"names":["React","Component","Button","LinearProgress","Dropdown","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","button","padding","borderRadius","marginTop","AddMate1","props","setSelectedTank","itemValue","itemIndex","setState","selectedTank","console","log","state","progressVal","setSelectedType","event","index","selectedType","mateTypes","tankOptions","id","name","map","elem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { ScrollView, StyleSheet, Text, View } from 'react-native';\nimport { Button, LinearProgress } from 'react-native-elements';\nimport Dropdown from \"../components/Dropdown\";\n\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: 'gray',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    button: {\n        backgroundColor: \"black\",\n        padding: 20,\n        borderRadius: 10,\n        marginTop: \"1rem\",\n    }\n   \n});\n\nclass AddMate1 extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            selectedTank: \"hello\",\n            tankOptions: [ {id: 1, name: \"Tank 1\"}, {id: 2, name: \"Tank 2\"}, {id: 3, name: \"Tank 3\"} ],\n            mateTypes: [\"Plant\", \"Fish\", \"Amphibian\", \"Invertebrate\"],\n            selectedType: \"\",\n            progressVal: 0\n\n        }\n    }\n\n    setSelectedTank = (itemValue, itemIndex) => {\n        this.setState({\n            selectedTank: itemValue\n        }, function() {\n            console.log(this.state.selectedTank)\n        })\n        if (this.state.progressVal === 0) {\n            this.setState({\n                progressVal: this.state.progressVal+0.15\n            })\n        }\n        \n    }\n\n    setSelectedType = (event, index) => {\n        this.setState({\n            selectedType: this.state.mateTypes[index]\n        }, () => {\n            console.log(this.state.selectedType)\n        })\n        if (this.state.progressVal < 0.3) {\n            this.setState({\n                progressVal: this.state.progressVal+0.15\n            })\n        }\n    }\n    \n    render() {\n        return (\n            <View style={styles.container}>\n                <LinearProgress \n                    color=\"black\"\n                    value={this.state.progressVal}\n                    trackColor=\"white\"\n                    variant=\"determinate\"\n                />\n                <View >\n                    <Text>Step 1:</Text>\n                    <Text>Choose a tank to add to</Text>\n\n                    <Dropdown\n                        selectedItem= {this.state.selectedTank}\n                        setSelectedValue= {this.setSelectedTank}\n                        itemOptions= {this.state.tankOptions}\n                    />\n                </View>\n\n                <View>\n                    <Text>Step 2:</Text>\n                    <Text>Choose the type of mate</Text>\n\n                    {this.state.mateTypes.map((elem, index) => {\n                        return (\n                            <Button\n                                onPress={event => this.setSelectedType(event, index)}\n                                buttonStyle={styles.button}\n                                activeOpacity={.5}\n                                title= {elem}\n                                type=\"solid\"\n                            />\n                        )\n                    })}\n                </View>\n\n\n            </View>\n        );\n    }\n}\n\nexport default AddMate1;"]},"metadata":{},"sourceType":"module"}