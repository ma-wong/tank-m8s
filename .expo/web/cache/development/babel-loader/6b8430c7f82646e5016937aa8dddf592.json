{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/morganwong/my-projects/tank-m8s/screens/AddTankMate.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport CheckBox from \"react-native-web/dist/exports/CheckBox\";\nimport { Button, LinearProgress } from 'react-native-elements';\nimport Dropdown from \"../components/Dropdown\";\nimport UserInput from \"../components/UserInput\";\nimport AddReminder from \"../components/AddReminder\";\nimport Bttn from \"../components/Bttn\";\nimport ModalView from \"../components/ModalView\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'gray',\n    justifyContent: 'center'\n  },\n  scrollView: {\n    marginHorizontal: 10\n  },\n  button: {\n    backgroundColor: \"black\",\n    padding: 20,\n    borderRadius: 10,\n    flex: 1\n  },\n  view: {\n    alignItems: \"center\"\n  }\n});\n\nvar AddTankMate = function (_Component) {\n  _inherits(AddTankMate, _Component);\n\n  var _super = _createSuper(AddTankMate);\n\n  function AddTankMate(props) {\n    var _this;\n\n    _classCallCheck(this, AddTankMate);\n\n    _this = _super.call(this, props);\n\n    _this.setSelectedType = function (event, index) {\n      _this.setState({\n        selectedType: _this.state.mateTypes[index]\n      }, function () {\n        console.log(_this.state.selectedType);\n      });\n\n      if (_this.state.progressVal < 0.3) {\n        _this.setState({\n          progressVal: _this.state.progressVal + 0.15\n        });\n      }\n    };\n\n    _this.setName = function (mateName) {\n      if (_this.state.mateName === \"\") {\n        _this.setState({\n          progressVal: _this.state.progressVal + 0.15\n        });\n      }\n\n      _this.setState({\n        mateName: mateName\n      }, function () {\n        console.log(_this.state.mateName);\n      });\n    };\n\n    _this.setSpecies = function (species) {\n      _this.setState({\n        species: species\n      }, function () {\n        console.log(_this.state.species);\n      });\n    };\n\n    _this.createTankMate = function () {\n      var postData = {\n        tankId: _this.state.selectedTank,\n        type: _this.state.selectedType,\n        name: _this.state.mateName,\n        species: _this.state.species,\n        reminder: _this.state.reminderSelected\n      };\n      console.log(postData);\n    };\n\n    _this.state = {\n      selectedTank: 1,\n      tankOptions: [{\n        value: 1,\n        label: \"Tank 1\"\n      }, {\n        value: 2,\n        label: \"Tank 2\"\n      }, {\n        value: 3,\n        label: \"Tank 3\"\n      }],\n      mateTypes: [\"Plant\", \"Fish\", \"Amphibian\", \"Invertebrate\"],\n      selectedType: \"\",\n      mateName: \"\",\n      species: \"\"\n    };\n    _this.setSelectedTank = _this.setSelectedTank.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AddTankMate, [{\n    key: \"setSelectedTank\",\n    value: function setSelectedTank(callback) {\n      this.setState(function (state) {\n        return {\n          selectedTank: callback(state.selectedTank)\n        };\n      }, function () {\n        console.log(this.state.selectedTank);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(SafeAreaView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }, React.createElement(ScrollView, {\n        style: styles.scrollView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }\n      }, \"Step 1:\"), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      }, \"Choose a tank to add to\")), React.createElement(View, {\n        style: styles.view,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      }, React.createElement(Dropdown, {\n        selectedItem: this.state.selectedTank,\n        setSelectedValue: this.setSelectedTank,\n        itemOptions: this.state.tankOptions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }\n      }, \"Step 2:\"), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }\n      }, \"Choose the type of mate\")), React.createElement(View, {\n        style: styles.view,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: \"row\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }\n      }, this.state.mateTypes.map(function (elem, index) {\n        return React.createElement(Button, {\n          onPress: function onPress(event) {\n            return _this2.setSelectedType(event, index);\n          },\n          buttonStyle: styles.button,\n          activeOpacity: .5,\n          title: elem,\n          type: \"solid\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 33\n          }\n        });\n      }))), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }\n      }, \"Step 3:\"), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }\n      }, \"Upload a photo (optional)\")), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }\n      }, \"Step 4:\"), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }\n      }, \"Tell us a little bit about them\")), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }\n      }, \"Name\"), React.createElement(UserInput, {\n        text: this.state.mateName,\n        onChangeText: this.setName,\n        placeholder: \"Chowdie\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }\n      }, \"Species\"), React.createElement(UserInput, {\n        text: this.state.species,\n        onChangeText: this.setSpecies,\n        placeholder: \"Gold Fish\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }\n      }, React.createElement(ModalView, {\n        label: \"Add Reminder\",\n        fullscreen: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.view,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 17\n        }\n      }, React.createElement(Bttn, {\n        text: \"Create Mate\",\n        onPress: this.createTankMate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }\n      }))));\n    }\n  }]);\n\n  return AddTankMate;\n}(Component);\n\nexport default AddTankMate;","map":{"version":3,"sources":["/Users/morganwong/my-projects/tank-m8s/screens/AddTankMate.js"],"names":["React","Component","Button","LinearProgress","Dropdown","UserInput","AddReminder","Bttn","ModalView","styles","StyleSheet","create","container","flex","backgroundColor","justifyContent","scrollView","marginHorizontal","button","padding","borderRadius","view","alignItems","AddTankMate","props","setSelectedType","event","index","setState","selectedType","state","mateTypes","console","log","progressVal","setName","mateName","setSpecies","species","createTankMate","postData","tankId","selectedTank","type","name","reminder","reminderSelected","tankOptions","value","label","setSelectedTank","bind","callback","flexDirection","map","elem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { SafeAreaView, ScrollView, StyleSheet, Text, View, CheckBox } from 'react-native';\nimport { Button, LinearProgress } from 'react-native-elements';\nimport Dropdown from \"../components/Dropdown\";\nimport UserInput from \"../components/UserInput\";\nimport AddReminder from \"../components/AddReminder\";\nimport Bttn from \"../components/Bttn\";\nimport ModalView from '../components/ModalView';\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: 'gray',\n      justifyContent: 'center',\n    //   alignItems: 'center'\n    //   marginVertical: 20\n    },\n    scrollView: {\n        marginHorizontal: 10,\n        // backgroundColor: \"pink\",\n    },\n    button: {\n        backgroundColor: \"black\",\n        padding: 20,\n        borderRadius: 10,\n        // marginTop: \"1rem\",\n        // width: 100,\n        flex: 1\n    },\n    view: {\n        alignItems: \"center\"\n    }\n   \n});\n\nclass AddTankMate extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            selectedTank: 1,\n            tankOptions: [ {value: 1, label: \"Tank 1\"}, {value: 2, label: \"Tank 2\"}, {value: 3, label: \"Tank 3\"} ],\n            mateTypes: [\"Plant\", \"Fish\", \"Amphibian\", \"Invertebrate\"],\n            selectedType: \"\",\n            mateName: \"\",\n            species: \"\"\n        }\n        this.setSelectedTank = this.setSelectedTank.bind(this);\n    }\n\n    setSelectedTank(callback) {\n        this.setState(state => ({\n          selectedTank: callback(state.selectedTank)\n        }), function() {\n            console.log(this.state.selectedTank)\n        });\n    }\n\n    // setItems(callback) {\n    //     this.setState(state => ({\n    //       items: callback(state.items)\n    //     }));\n    // }\n\n    setSelectedType = (event, index) => {\n        this.setState({\n            selectedType: this.state.mateTypes[index]\n        }, () => {\n            console.log(this.state.selectedType)\n        })\n        if (this.state.progressVal < 0.3) {\n            this.setState({\n                progressVal: this.state.progressVal+0.15\n            })\n        }\n    }\n\n    setName = (mateName) => {\n        if (this.state.mateName === \"\") {\n            this.setState({\n                progressVal: this.state.progressVal+0.15\n            })\n        }\n        this.setState({\n            mateName: mateName\n        }, () => {\n            console.log(this.state.mateName)\n        })\n    }\n\n    setSpecies = (species) => {\n        this.setState({\n            species: species\n        }, () => {\n            console.log(this.state.species)\n        })\n    }\n    \n    createTankMate = () => {\n        var postData = {\n            tankId: this.state.selectedTank,\n            type: this.state.selectedType,\n            name: this.state.mateName,\n            species: this.state.species,\n            reminder: this.state.reminderSelected\n        }\n        console.log(postData);\n    }\n\n    render() {\n        return (\n            <SafeAreaView style={styles.container}>\n              <ScrollView style={styles.scrollView}>\n                {/* <LinearProgress \n                    color=\"black\"\n                    value={this.state.progressVal}\n                    trackColor=\"white\"\n                    variant=\"determinate\"\n                /> */}\n\n                <View >\n                    <Text>Step 1:</Text>\n                    <Text>Choose a tank to add to</Text>\n                </View>\n\n                <View style={styles.view}>\n                    <Dropdown\n                        selectedItem= {this.state.selectedTank}\n                        setSelectedValue= {this.setSelectedTank}\n                        itemOptions= {this.state.tankOptions}                     \n                    />\n                </View>\n                \n\n                <View>\n                    <Text>Step 2:</Text>\n                    <Text>Choose the type of mate</Text>\n                </View>\n\n                <View style={styles.view}>\n                    <View style={{flex: 1, flexDirection: \"row\"}}>\n                        {this.state.mateTypes.map((elem, index) => {\n                            return (\n                                <Button\n                                    onPress={event => this.setSelectedType(event, index)}\n                                    buttonStyle={styles.button}\n                                    activeOpacity={.5}\n                                    title= {elem}\n                                    type=\"solid\"\n                                />\n                            )\n                        })}\n                    </View>\n                    \n                </View>\n\n                <View >\n                    <Text>Step 3:</Text>\n                    <Text>Upload a photo (optional)</Text>\n                </View>\n\n                <View>\n                    <Text>Step 4:</Text>\n                    <Text>Tell us a little bit about them</Text>\n                </View>\n\n                <View>\n                    <Text>Name</Text>\n                    <UserInput\n                        text= {this.state.mateName}\n                        onChangeText= {this.setName}\n                        placeholder= \"Chowdie\"\n                    />\n\n                    <Text>Species</Text>\n                    <UserInput \n                        text= {this.state.species}\n                        onChangeText= {this.setSpecies}\n                        placeholder= \"Gold Fish\"\n                    />\n                </View>\n                \n                <View>\n                    <ModalView \n                        label= \"Add Reminder\"\n                        fullscreen= {true}\n                    />\n                </View>\n\n                <View style={styles.view} >\n                    <Bttn \n                        text= \"Create Mate\"\n                        onPress= {this.createTankMate}     \n                    />\n                </View>\n\n              </ScrollView>\n            </SafeAreaView>\n        );\n    }\n}\n\nexport default AddTankMate;"]},"metadata":{},"sourceType":"module"}