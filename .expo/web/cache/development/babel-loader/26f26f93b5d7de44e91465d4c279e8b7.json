{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/morganwong/my-projects/tank-m8s/components/AddReminder/index.js\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport DateTimePicker from 'react-datetime-picker';\nimport UserInput from \"../UserInput\";\nimport Dropdown from \"../Dropdown\";\n\nfunction AddReminder(_ref) {\n  var text = _ref.text;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      label = _React$useState2[0],\n      onChangeLabel = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"Never\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      repeatValue = _React$useState4[0],\n      setRepeatValue = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      snooze = _React$useState6[0],\n      setSnooze = _React$useState6[1];\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      time = _React$useState8[0],\n      setTime = _React$useState8[1];\n\n  var repeatOptions = [{\n    id: 1,\n    name: \"Never\"\n  }, {\n    id: 2,\n    name: \"Once a day\"\n  }, {\n    id: 3,\n    name: \"Once a week\"\n  }, {\n    id: 4,\n    name: \"Once a month\"\n  }];\n\n  var toggleSnooze = function toggleSnooze() {\n    return setSnooze(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"Time\"), React.createElement(DateTimePicker, {\n    onChange: setTime,\n    value: time,\n    disableClock: true,\n    hourPlaceholder: \"00\",\n    minutePlaceholder: \"00\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Label\"), React.createElement(UserInput, {\n    onChangeText: onChangeLabel,\n    text: label,\n    placeholder: \"Feed Piggy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Repeat\"), React.createElement(Dropdown, {\n    selectedItem: repeatValue,\n    setSelectedValue: setRepeatValue,\n    itemOptions: repeatOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Snooze\"), React.createElement(Switch, {\n    trackColor: {\n      false: \"#767577\",\n      true: \"#81b0ff\"\n    },\n    thumbColor: snooze ? \"#f5dd4b\" : \"#f4f3f4\",\n    ios_backgroundColor: \"#3e3e3e\",\n    onValueChange: toggleSnooze,\n    value: snooze,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default AddReminder;\nvar styles = StyleSheet.create({\n  timePicker: {\n    color: \"blue\"\n  }\n});","map":{"version":3,"sources":["/Users/morganwong/my-projects/tank-m8s/components/AddReminder/index.js"],"names":["React","DateTimePicker","UserInput","Dropdown","AddReminder","text","useState","label","onChangeLabel","repeatValue","setRepeatValue","snooze","setSnooze","time","setTime","repeatOptions","id","name","toggleSnooze","previousState","false","true","styles","StyleSheet","create","timePicker","color"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAGA,OAAOC,cAAP,MAA2B,uBAA3B;AAGA,OAAOC,SAAP;AACA,OAAOC,QAAP;;AAEA,SAASC,WAAT,OAAgC;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AAC9B,wBAA+BL,KAAK,CAACM,QAAN,CAAe,EAAf,CAA/B;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,aAAd;;AACA,yBAAsCR,KAAK,CAACM,QAAN,CAAe,OAAf,CAAtC;AAAA;AAAA,MAAOG,WAAP;AAAA,MAAoBC,cAApB;;AACA,yBAA4BV,KAAK,CAACM,QAAN,CAAe,KAAf,CAA5B;AAAA;AAAA,MAAOK,MAAP;AAAA,MAAeC,SAAf;;AACA,yBAAwBZ,KAAK,CAACM,QAAN,CAAe,EAAf,CAAxB;AAAA;AAAA,MAAOO,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAAD,EAAyB;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAAzB,EAAsD;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAAtD,EAAoF;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAApF,CAAtB;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,WAAMN,SAAS,CAAC,UAAAO,aAAa;AAAA,aAAI,CAACA,aAAL;AAAA,KAAd,CAAf;AAAA,GAArB;;AAEA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGE,oBAAC,cAAD;AACE,IAAA,QAAQ,EAAEL,OADZ;AAEE,IAAA,KAAK,EAAED,IAFT;AAGE,IAAA,YAAY,EAAE,IAHhB;AAIE,IAAA,eAAe,EAAC,IAJlB;AAKE,IAAA,iBAAiB,EAAC,IALpB;AAME,IAAA,SAAS,EAAE,IANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAYE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAZF,EAaE,oBAAC,SAAD;AACE,IAAA,YAAY,EAAGL,aADjB;AAEE,IAAA,IAAI,EAAED,KAFR;AAGE,IAAA,WAAW,EAAC,YAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAmBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF,EAoBE,oBAAC,QAAD;AACE,IAAA,YAAY,EAAGE,WADjB;AAEE,IAAA,gBAAgB,EAAGC,cAFrB;AAGE,IAAA,WAAW,EAAGK,aAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,EA0BE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BF,EA2BE,oBAAC,MAAD;AACE,IAAA,UAAU,EAAE;AAAEK,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,IAAI,EAAE;AAA1B,KADd;AAEE,IAAA,UAAU,EAAEV,MAAM,GAAG,SAAH,GAAe,SAFnC;AAGE,IAAA,mBAAmB,EAAC,SAHtB;AAIE,IAAA,aAAa,EAAEO,YAJjB;AAKE,IAAA,KAAK,EAAEP,MALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BF,CADF;AAqCD;;AAED,eAAeP,WAAf;AAGA,IAAMkB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE;AADG;AADmB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport { View, Text, Switch, StyleSheet} from \"react-native\";\n// import TimePicker from 'react-time-picker';\nimport DateTimePicker from 'react-datetime-picker'\n// import 'react-clock/dist/Clock.css';\n// import TimePicker from 'react-time-picker/dist/TimePicker.css';\nimport UserInput from \"../UserInput\";\nimport Dropdown from \"../Dropdown\";\n\nfunction AddReminder ({ text }) {\n  const [label, onChangeLabel] = React.useState(\"\");\n  const [repeatValue, setRepeatValue] = React.useState(\"Never\");\n  const [snooze, setSnooze] = React.useState(false);\n  const [time, setTime] = React.useState('');\n\n  const repeatOptions = [{id: 1, name: \"Never\"}, {id: 2, name: \"Once a day\"}, {id: 3, name: \"Once a week\"}, {id: 4, name: \"Once a month\"} ];\n  const toggleSnooze = () => setSnooze(previousState => !previousState);\n\n  return (\n    <View>\n\n      <Text>Time</Text>\n      <DateTimePicker\n        onChange={setTime}\n        value={time}\n        disableClock={true}\n        hourPlaceholder=\"00\"\n        minutePlaceholder=\"00\"\n        autoFocus={true}\n      />\n\n      <Text>Label</Text>\n      <UserInput \n        onChangeText= {onChangeLabel}\n        text={label}\n        placeholder=\"Feed Piggy\"\n      />\n\n      <Text>Repeat</Text>\n      <Dropdown\n        selectedItem= {repeatValue}\n        setSelectedValue= {setRepeatValue}\n        itemOptions= {repeatOptions}\n      />\n\n      <Text>Snooze</Text>\n      <Switch\n        trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\n        thumbColor={snooze ? \"#f5dd4b\" : \"#f4f3f4\"}\n        ios_backgroundColor=\"#3e3e3e\"\n        onValueChange={toggleSnooze}\n        value={snooze}\n      />\n    </View>\n  );\n}\n\nexport default AddReminder;\n\n\nconst styles = StyleSheet.create({\n  timePicker: {\n    color: \"blue\"\n  }\n \n});"]},"metadata":{},"sourceType":"module"}