{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/morganwong/my-projects/tank-m8s/components/AutoCompInput/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Autocomplete from 'react-native-autocomplete-input';\n\nvar AutoCompInput = function (_Component) {\n  _inherits(AutoCompInput, _Component);\n\n  var _super = _createSuper(AutoCompInput);\n\n  function AutoCompInput(props) {\n    var _this;\n\n    _classCallCheck(this, AutoCompInput);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      query: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(AutoCompInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Autocomplete, {\n        data: data,\n        value: query,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            query: text\n          });\n        },\n        flatListProps: {\n          keyExtractor: function keyExtractor(_, idx) {\n            return idx;\n          },\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return React.createElement(Text, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 37\n              }\n            }, item);\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return AutoCompInput;\n}(Component);\n\nexport default AutoCompInput;","map":{"version":3,"sources":["/Users/morganwong/my-projects/tank-m8s/components/AutoCompInput/index.js"],"names":["React","Component","Autocomplete","AutoCompInput","props","state","query","data","text","setState","keyExtractor","_","idx","renderItem","item"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,iCAAzB;;IAEMC,a;;;;;AACJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAFiB;AAKlB;;;;WAED,kBAAS;AAAA;;AACP,aACE,oBAAC,YAAD;AACE,QAAA,IAAI,EAAEC,IADR;AAEE,QAAA,KAAK,EAAED,KAFT;AAGE,QAAA,YAAY,EAAE,sBAACE,IAAD;AAAA,iBAAU,MAAI,CAACC,QAAL,CAAc;AAAEH,YAAAA,KAAK,EAAEE;AAAT,WAAd,CAAV;AAAA,SAHhB;AAIE,QAAA,aAAa,EAAE;AACbE,UAAAA,YAAY,EAAE,sBAACC,CAAD,EAAIC,GAAJ;AAAA,mBAAYA,GAAZ;AAAA,WADD;AAEbC,UAAAA,UAAU,EAAE;AAAA,gBAAGC,IAAH,QAAGA,IAAH;AAAA,mBAAc,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAOA,IAAP,CAAd;AAAA;AAFC,SAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAWD;;;;EApByBb,S;;AAuB5B,eAAeE,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport Autocomplete from 'react-native-autocomplete-input';\n\nclass AutoCompInput extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      query: \"\"\n    }\n  }\n\n  render() {\n    return (\n      <Autocomplete\n        data={data}\n        value={query}\n        onChangeText={(text) => this.setState({ query: text })}\n        flatListProps={{\n          keyExtractor: (_, idx) => idx,\n          renderItem: ({ item }) => <Text>{item}</Text>,\n        }}\n      />\n    )\n  }\n}\n\nexport default AutoCompInput;"]},"metadata":{},"sourceType":"module"}