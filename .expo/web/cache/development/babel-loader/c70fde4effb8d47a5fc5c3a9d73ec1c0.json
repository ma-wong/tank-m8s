{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/morganwong/my-projects/tank-m8s/components/AddReminder/index.js\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport UserInput from \"../UserInput\";\nimport Dropdown from \"../Dropdown\";\nimport { FAB, Button } from 'react-native-elements';\n\nfunction AddReminder(_ref) {\n  var toggleOverlay = _ref.toggleOverlay;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      label = _React$useState2[0],\n      onChangeLabel = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"Never\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      repeatValue = _React$useState4[0],\n      setRepeatValue = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      snooze = _React$useState6[0],\n      setSnooze = _React$useState6[1];\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      time = _React$useState8[0],\n      setTime = _React$useState8[1];\n\n  var repeatOptions = [{\n    value: 1,\n    label: \"Never\"\n  }, {\n    value: 2,\n    label: \"Once a day\"\n  }, {\n    value: 3,\n    label: \"Once a week\"\n  }, {\n    value: 4,\n    label: \"Once a month\"\n  }];\n\n  var toggleSnooze = function toggleSnooze() {\n    return setSnooze(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  function saveReminder() {\n    var postData = {\n      name: label,\n      repeat: repeatValue,\n      snooze: snooze,\n      dateTime: time\n    };\n    toggleOverlay();\n    console.log(postData);\n  }\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Time\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Label\"), React.createElement(UserInput, {\n    onChangeText: onChangeLabel,\n    text: label,\n    placeholder: \"Feed Piggy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Repeat\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Snooze\"), React.createElement(Switch, {\n    trackColor: {\n      false: \"#767577\",\n      true: \"#81b0ff\"\n    },\n    thumbColor: snooze ? \"#f5dd4b\" : \"#f4f3f4\",\n    ios_backgroundColor: \"#3e3e3e\",\n    onValueChange: toggleSnooze,\n    value: snooze,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), React.createElement(FAB, {\n    title: \"Save\",\n    color: \"green\",\n    onPress: saveReminder,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default AddReminder;\nvar styles = StyleSheet.create({\n  button: {\n    borderColor: \"red\"\n  }\n});","map":{"version":3,"sources":["/Users/morganwong/my-projects/tank-m8s/components/AddReminder/index.js"],"names":["React","UserInput","Dropdown","FAB","Button","AddReminder","toggleOverlay","useState","label","onChangeLabel","repeatValue","setRepeatValue","snooze","setSnooze","time","setTime","repeatOptions","value","toggleSnooze","previousState","saveReminder","postData","name","repeat","dateTime","console","log","false","true","styles","StyleSheet","create","button","borderColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { View, Text, Switch, StyleSheet} from \"react-native\";\n// import TimePicker from 'react-time-picker';\n// import DateTimePicker from 'react-datetime-picker'\n// import 'react-clock/dist/Clock.css';\n// import TimePicker from 'react-time-picker/dist/TimePicker.css';\nimport UserInput from \"../UserInput\";\nimport Dropdown from \"../Dropdown\";\nimport { FAB, Button } from 'react-native-elements';\n\n\nfunction AddReminder ({ toggleOverlay }) {\n  const [label, onChangeLabel] = React.useState(\"\");\n  const [repeatValue, setRepeatValue] = React.useState(\"Never\");\n  const [snooze, setSnooze] = React.useState(false);\n  const [time, setTime] = React.useState('');\n\n  const repeatOptions = [{value: 1, label: \"Never\"}, {value: 2, label: \"Once a day\"}, {value: 3, label: \"Once a week\"}, {value: 4, label: \"Once a month\"} ];\n  \n  const toggleSnooze = () => setSnooze(previousState => !previousState);\n\n  function saveReminder() {\n    let postData = {\n      name: label,\n      repeat: repeatValue,\n      snooze: snooze,\n      dateTime: time\n    }\n    toggleOverlay();\n    console.log(postData);\n  }\n\n  return (\n    <View>\n\n      <Text>Time</Text>\n      {/* <DateTimePicker\n        onChange={setTime}\n        value={time}\n        disableClock={true}\n        hourPlaceholder=\"00\"\n        minutePlaceholder=\"00\"\n        autoFocus={true}\n        dayPlaceholder = \"dd\"\n        monthPlaceholder = \"mm\"\n        yearPlaceholder = \"yyyy\"\n      /> */}\n\n      <Text>Label</Text>\n      <UserInput \n        onChangeText= {onChangeLabel}\n        text={label}\n        placeholder=\"Feed Piggy\"\n      />\n\n      <Text>Repeat</Text>\n      {/* <Dropdown\n        selectedItem= {repeatValue}\n        setSelectedValue= {setRepeatValue}\n        itemOptions= {repeatOptions}\n      /> */}\n\n      <Text>Snooze</Text>\n      <Switch\n        trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\n        thumbColor={snooze ? \"#f5dd4b\" : \"#f4f3f4\"}\n        ios_backgroundColor=\"#3e3e3e\"\n        onValueChange={toggleSnooze}\n        value={snooze}\n      />\n\n      <FAB \n        title=\"Save\" \n        color= \"green\"\n        onPress= {saveReminder}\n        size= \"small\"\n      />\n      \n    </View>\n  );\n}\n\nexport default AddReminder;\n\n\nconst styles = StyleSheet.create({\n  button: {\n   borderColor: \"red\"\n\n  }\n \n});"]},"metadata":{},"sourceType":"module"}