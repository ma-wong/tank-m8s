{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/morganwong/my-projects/tank-m8s/screens/AddMate1.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dropdown from \"../components/Dropdown\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'gray',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    backgroundColor: \"blue\",\n    padding: 20,\n    borderRadius: 5,\n    marginTop: \"1rem\"\n  },\n  buttonText: {\n    fontSize: 20,\n    color: '#fff',\n    textAlign: \"center\"\n  }\n});\n\nvar AddMate1 = function (_Component) {\n  _inherits(AddMate1, _Component);\n\n  var _super = _createSuper(AddMate1);\n\n  function AddMate1(props) {\n    var _this;\n\n    _classCallCheck(this, AddMate1);\n\n    _this = _super.call(this, props);\n\n    _this.setSelectedTank = function (itemValue, itemIndex) {\n      _this.setState({\n        selectedTank: itemValue\n      }, function () {\n        console.log(this.state.selectedTank);\n      });\n    };\n\n    _this.setSelectedType = function (event) {\n      _this.setState({\n        selectedType: event.target.value\n      }, function () {\n        console.log(event.target.value);\n      });\n    };\n\n    _this.state = {\n      selectedTank: \"hello\",\n      tankOptions: [{\n        id: 1,\n        name: \"Tank 1\"\n      }, {\n        id: 2,\n        name: \"Tank 2\"\n      }, {\n        id: 3,\n        name: \"Tank 3\"\n      }],\n      mateTypes: [\"Plant\", \"Fish\", \"Amphibian\", \"Invertebrate\"],\n      selectedType: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(AddMate1, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      }, \"Step 1:\"), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }, \"Choose a tank to add to\"), React.createElement(Dropdown, {\n        selectedItem: this.state.selectedTank,\n        setSelectedValue: this.setSelectedTank,\n        itemOptions: this.state.tankOptions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }, \"Step 2:\"), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      }, \"Choose the type of mate\"), this.state.mateTypes.map(function (elem, index) {\n        return React.createElement(TouchableOpacity, {\n          onPress: _this2.setSelectedType,\n          style: styles.button,\n          value: elem,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }\n        }, elem));\n      })));\n    }\n  }]);\n\n  return AddMate1;\n}(Component);\n\nexport default AddMate1;","map":{"version":3,"sources":["/Users/morganwong/my-projects/tank-m8s/screens/AddMate1.js"],"names":["React","Component","Dropdown","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","button","padding","borderRadius","marginTop","buttonText","fontSize","color","textAlign","AddMate1","props","setSelectedTank","itemValue","itemIndex","setState","selectedTank","console","log","state","setSelectedType","event","selectedType","target","value","tankOptions","id","name","mateTypes","map","elem","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { ScrollView, StyleSheet, Text, View, TouchableOpacity, Alert} from 'react-native';\nimport Dropdown from \"../components/Dropdown\";\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: 'gray',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    button: {\n        backgroundColor: \"blue\",\n        padding: 20,\n        borderRadius: 5,\n        marginTop: \"1rem\"\n    },\n    buttonText: {\n        fontSize: 20,\n        color: '#fff',\n        textAlign: \"center\"\n    }\n   \n});\n\nclass AddMate1 extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            selectedTank: \"hello\",\n            tankOptions: [ {id: 1, name: \"Tank 1\"}, {id: 2, name: \"Tank 2\"}, {id: 3, name: \"Tank 3\"} ],\n            // tankOptions: [\"Tank 2\", \"Tank 3\", \"Tank 4\"]\n            mateTypes: [\"Plant\", \"Fish\", \"Amphibian\", \"Invertebrate\"],\n            selectedType: \"\"\n        }\n    }\n\n    setSelectedTank = (itemValue, itemIndex) => {\n        this.setState({\n            selectedTank: itemValue\n        }, function() {\n            console.log(this.state.selectedTank)\n        })\n    }\n\n    setSelectedType = (event) => {\n        this.setState({\n            selectedType: event.target.value\n        }, () => {\n            console.log(event.target.value)\n        })\n    }\n    \n    render() {\n        return (\n            <View style={styles.container}>\n                <View >\n                    <Text>Step 1:</Text>\n                    <Text>Choose a tank to add to</Text>\n\n                    <Dropdown\n                        selectedItem= {this.state.selectedTank}\n                        setSelectedValue= {this.setSelectedTank}\n                        itemOptions= {this.state.tankOptions}\n                    />\n                </View>\n\n                <View>\n                    <Text>Step 2:</Text>\n                    <Text>Choose the type of mate</Text>\n\n                    {this.state.mateTypes.map((elem, index) => {\n                        return (\n                            <TouchableOpacity\n                                onPress={this.setSelectedType}\n                                style={styles.button}\n                                value={elem}\n                            \n                            >\n                                \n                                <Text style={styles.buttonText}>{elem}</Text>\n                            \n                            </TouchableOpacity>\n                        )\n                    })}\n                </View>\n\n\n            </View>\n        );\n    }\n}\n\nexport default AddMate1;"]},"metadata":{},"sourceType":"module"}